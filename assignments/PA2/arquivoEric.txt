
{INT_CONST} {
    if(is_invalid(yytext)) {
        strcpy(cool_yylval.error_msg, "Valor invalido");
        return (ERROR);
    }
}

<STRING><<EOF>> {
	strcpy(cool_yylval.error_msg, "EOF in strin");
	BEGIN 0; return (ERROR);
}


<STRING>\n {
	curr_lineno++;
	strcpy(cool_yylval.error_msg, "String nao terminada");
	BEGIN 0; return (ERROR);
}




<BLOCK_COMMENT><<EOF>> { 
    strcpy(cool_yylval.error_msg, "Comentario n√£o fechado");
    BEGIN(INITIAL); 
    return (ERROR); 
}
<BLOCK_COMMENT>.  {}


.                   { cool_yylval.error_msg = yytext;
                      return (ERROR);
                    }




"(*"               { BEGIN(BLOCK_COMMENT); }
<BLOCK_COMMENT>"*)"  { BEGIN(INITIAL); }  

%x BLOCK_COMMENT

int str_counter = 0;
int string_const_len;
bool  str_contain_null_char;


bool is_invalid(const char * yytext){
  int val = atoi(yytext);
  return(val<0);
}