



/*
 Vericicar se  tem caracter nulo na string
*/

<STRING>\"{ 

            if(string_const_len>1 && str_contain_null_char){
            strcpy(cool_yylval.error_msg, "tem caracter nulo");
            BEGIN 0; return (ERROR);
            }
}


/*
 Vericicar se a string e muito longa
*/
<STRING>.		{ 
        if(string_const_len>MAX_STR_CONST){
        strcpy(cool_yylval.error_msg, "String muito longa");
            BEGIN 0; return (ERROR);
        }
        string_const[string_const_len++] = yytext[0]; 
}

<STRING><<EOF>> {
    strcpy(cool_yylval.error_msg, "EOF");
    BEGIN 0; return (ERROR);
}




/*
 verificar se o valor inteiro e valido
*/

[0-9]+ {
    if(is_invalid(yytext)) {
        strcpy(cool_yylval.error_msg, "Valor invalido");
        return (ERROR);
    }
}



[A-Z][A-Za-z0-9]* {
    cool_yylval.symbol = idtable.add_string(yytext); 
    return (TYPEID);
}

[a-z][A-Za-z0-9]* {
    cool_yylval.symbol = idtable.add_string(yytext); 
    return (OBJECTID);
}

/*
 verificar se e um inteiro
*/
[0-9]+				{ 
	cool_yylval.symbol = inttable.add_string(yytext); 
	return (INT_CONST);
}